(define (accumulate combiner null-value term a next b)
    (if (> a b)
        null-value
        (combiner (term a) (accumulate combiner null-value term (next a) next b))))

#1
(define (product term next a b)
    (accumulate (lambda (x y) (* x y)) 1 term a next b))


#2
(define (sum term next a b)
    (accumulate (lambda (x y) (+ x y)) 0 term a next b))