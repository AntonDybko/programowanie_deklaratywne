#a
(define (exp b e)
    (cond
        ((= e 1) b)
        (else (* b (exp b (- e 1))) )
    )
)

(exp 2 6)
(exp 3 3)

#b
(define (exp_helper b e acc)
    (cond
        ((= e 0) acc)
        (else (exp_helper b (- e 1) (* acc b)))
    )
)
(define (exp2 b e)
    (exp_helper b e 1)
)

(exp2 2 6)
(exp2 3 3)